<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.ssm.sys.ad.mapper.AdPermissionsMapper">
  <resultMap id="BaseResultMap" type="com.shop.ssm.sys.ad.model.AdPermissions">
    <constructor>
      <idArg column="pid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pname" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="level" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="paren_pid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pstate" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="rdescribe" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="ptype" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    pid, pname, level, paren_pid, pstate, rdescribe, ptype
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="adList">
    SELECT *
			FROM ad_permissions p INNER JOIN
			ps_type t on t.tid = p.ptype
			LEFT JOIN ps_state s ON p.pstate = s.sid
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ad_permissions
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shop.ssm.sys.ad.model.AdPermissions">
    insert into ad_permissions (pid, pname, level,
      paren_pid, pstate, rdescribe,
      ptype)
    values (#{pid,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR},
      #{parenPid,jdbcType=INTEGER}, #{pstate,jdbcType=INTEGER}, #{rdescribe,jdbcType=VARCHAR},
      #{ptype,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shop.ssm.sys.ad.model.AdPermissions">
    insert into ad_permissions
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pid,
      </if>
      <if test="pname != null">
        pname,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="parenPid != null">
        paren_pid,
      </if>
      <if test="pstate != null">
        pstate,
      </if>
      <if test="rdescribe != null">
        rdescribe,
      </if>
      <if test="ptype != null">
        ptype,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="pname != null">
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="parenPid != null">
        #{parenPid,jdbcType=INTEGER},
      </if>
      <if test="pstate != null">
        #{pstate,jdbcType=INTEGER},
      </if>
      <if test="rdescribe != null">
        #{rdescribe,jdbcType=VARCHAR},
      </if>
      <if test="ptype != null">
        #{ptype,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.ssm.sys.ad.model.AdPermissions">
    update ad_permissions
    <set>
      <if test="pname != null">
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="parenPid != null">
        paren_pid = #{parenPid,jdbcType=INTEGER},
      </if>
      <if test="pstate != null">
        pstate = #{pstate,jdbcType=INTEGER},
      </if>
      <if test="rdescribe != null">
        rdescribe = #{rdescribe,jdbcType=VARCHAR},
      </if>
      <if test="ptype != null">
        ptype = #{ptype,jdbcType=INTEGER},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.ssm.sys.ad.model.AdPermissions">
    update ad_permissions
    set pname = #{pname,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      paren_pid = #{parenPid,jdbcType=INTEGER},
      pstate = #{pstate,jdbcType=INTEGER},
      rdescribe = #{rdescribe,jdbcType=VARCHAR},
      ptype = #{ptype,jdbcType=INTEGER}
    where pid = #{pid,jdbcType=INTEGER}
  </update>


    <resultMap id="adList" type="com.shop.ssm.sys.ad.model.AdPermissions">
        <id column="pid" javaType="java.lang.Integer" property="pid" />
        <result column="pname" javaType="java.lang.String" property="pname" />
        <result column="level" javaType="java.lang.String" property="level" />
        <result column="paren_pid" javaType="java.lang.Integer" property="parenPid" />
        <result column="pstate" javaType="java.lang.Integer" property="pstate" />
        <result column="rdescribe" javaType="java.lang.String" property="rdescribe" />
        <association javaType="com.shop.ssm.sys.ad.model.PsState" property="psState">
            <id column="sid" javaType="java.lang.Integer" property="sid" />
            <result column="sname" javaType="java.lang.String" property="sname" />
        </association>
        <collection property="psType" ofType="com.shop.ssm.sys.ad.model.PsType">
          <id column="tid" property="tid" javaType="java.lang.Integer"/>
          <result column="tname" property="tname" javaType="java.lang.String"/>
        </collection>
    </resultMap>

    <select id="list" parameterType="com.shop.ssm.sys.ad.model.AdPermissions" resultMap="adList">
        select *
        from ad_permissions
        where 1=1
        <if test="null != pname and ''!=pname">
            AND pname LIKE CONCAT("%",#{pname,jdbcType=VARCHAR},"%")
        </if>
    </select>


</mapper>